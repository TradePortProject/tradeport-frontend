name: "CI - Stage 1 - Build and Test (Parallel)"

on:
  push:
    branches:
      - main
      - "feature/**"
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 📐 Setup Environment
    runs-on: ubuntu-latest
    outputs:
      node-modules-cache-hit: ${{ steps.cache-nodemodules.outputs.cache-hit }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline

  lint:
    name: 🧪 Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: npm run lint || true

  unit-test:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: npm run test || true
      - run: npm run test:coverage || true
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  build:
    name: 🏗️ Build Frontend
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: npm run build || true
      - uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  security-scan:
    name: 🧪 Security Scan
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
      - run: npm ci --prefer-offline --no-audit
      - run: npm audit --json > npm-audit.json || true
      - run: |
          if grep -q '"severity":"high"' ./npm-audit.json; then
            echo "⚠️ High severity vulnerabilities found"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: npm-audit.json
          retention-days: 7

  sonar:
    name: ☢️ SonarQube Analysis
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.base_ref == 'main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
