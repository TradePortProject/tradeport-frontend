name: "CI Pipeline - TradePort Frontend"

on:
  push:
    branches:
      - main
      - "feature/**"
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20"

jobs:
  setup:
    name: üìê Setup Environment
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-nodemodules.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: üì¶ Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

  lint:
    name: üß™ Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: npm run lint || true

  unit-test:
    name: üß™ Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: npm run test || true
      - run: npm run test:coverage || true
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  build:
    name: üèóÔ∏è Build Frontend
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build:prod
      - uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  npm-audit:
    name: üîê SCA - npm Audit
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    steps:
      - uses: actions/checkout@v4
      - run: npm ci --prefer-offline --no-audit
      - run: npm audit --json > npm-audit.json || true
      - run: |
          if grep -q '"severity":"high"' npm-audit.json; then
            echo "‚ö†Ô∏è High severity vulnerabilities found"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit.json
          retention-days: 7

  owasp-sca:
    name: üîê SCA - OWASP Dependency Check
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    steps:
      - uses: actions/checkout@v4
      - run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.2.0/dependency-check-7.2.0-release.zip
          unzip dependency-check-7.2.0-release.zip
          dependency-check/bin/dependency-check.sh --project "TradePort" --scan . --format XML --out odc-report.xml | tee ODC-report || true
      - run: |
          if grep -q "CRITICAL" ./ODC-report; then
            echo "üö® Critical vulnerabilities found"
            grep "CRITICAL" ./ODC-report
            exit 1
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: owasp-report
          path: |
            ODC-report
            odc-report.xml
          retention-days: 7

  codeql-sast:
    name: ‚ò¢Ô∏è SAST - CodeQL
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

  dast-zap:
    name: ‚ò£Ô∏è DAST - OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: [npm-audit, owasp-sca, codeql-sast]
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build:prod
      - run: |
          nohup npm run preview -- --port 4173 &
          sleep 10
      - run: curl -I http://localhost:4173 || exit 1
      - run: |
          docker run --network host \
            --user root \
            -v "${{ github.workspace }}:/zap/wrk/:rw" \
            -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://localhost:4173 \
            -g gen.conf \
            -r zap_baseline_report.html || echo "‚ö†Ô∏è ZAP scan failed but continuing"
      - uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_baseline_report.html
