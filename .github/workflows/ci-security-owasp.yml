name: "CI - Stage 2 - Security Scan - SAST & SCA"

on:
  push:
    branches: [main, "feature/**"]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Limit concurrent runs to save GitHub minutes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  owasp-sca:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-nodemodules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci --legacy-peer-deps

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.2.0/dependency-check-7.2.0-release.zip
          unzip dependency-check-7.2.0-release.zip

      - name: Run OWASP Scan and Generate Reports
        run: |
          dependency-check/bin/dependency-check.sh --project "TradePort" --scan . --format XML --out odc-report.xml | tee ODC-report || true

      - name: Check for critical vulnerabilities
        run: |
          if grep -q "CRITICAL" ./ODC-report; then
            echo "ðŸš¨ Critical vulnerabilities found"
            grep "CRITICAL" ./ODC-report
            exit 1
          fi

      - name: Archive ODC reports
        uses: actions/upload-artifact@v4
        with:
          name: sast-report
          path: |
            ./ODC-report
            ./odc-report.xml
          retention-days: 7
