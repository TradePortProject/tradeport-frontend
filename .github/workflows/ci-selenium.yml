name: "CI - Stage 4 - Selenium Tests"

# ======================================================
# End-to-End Testing Workflow - Stage 4
# ======================================================
# This workflow runs Selenium-based end-to-end tests
# for the Tradeport Frontend application.
#
# Key Features:
# - Starts a development server for testing
# - Runs Selenium IDE tests against the running application
# - Generates and stores test reports
#
# The workflow runs on pull requests to main and can be 
# manually triggered. A scheduled run can be enabled.
# ======================================================

on:
  # push:
    # branches: [main, "feature/**"]  # Uncomment to run on push to these branches
  pull_request:
    branches: [main]  # Run on PRs targeting main branch
  workflow_dispatch:  # Allow manual triggering
  # schedule:
  #   - cron: "0 2 * * *"  # Uncomment to run every day at 2am UTC

jobs:
  Selenium-Tests:
    runs-on: ubuntu-latest  # Run on latest Ubuntu runner

    steps:
      - name: ⬇️ Checkout Code  # Get the latest code from the repository
        uses: actions/checkout@v4

      - name: 📦 Install Node.js  # Configure Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Use Node.js 18

      - name: ⚙️ Install Dependencies  # Install Selenium testing tools globally
        run: npm install -g selenium-side-runner chromedriver wait-on

      - name: 🚀 Start React Dev Server and Wait Until Ready  # Start the application for testing
        run: |
          npm install  # Install project dependencies
          npm run dev &  # Launch development server in background
          wait-on http://localhost:3001 --timeout 60000  # Wait up to 60s for the server to be ready

      - name: 🧪 Run Selenium IDE Test Suite  # Execute Selenium tests against the running app
        run: |
          selenium-side-runner \
            --base-url http://localhost:3001 \  # Target the running app
            --output-directory test-results \    # Save test results to this directory
            -c "goog:chromeOptions.args=[--headless, --no-sandbox, --disable-dev-shm-usage, --disable-gpu, --user-data-dir=/tmp/chrome-data-$RANDOM]" \  # Configure Chrome for CI environment
            tests/selenium/tradeport-e2e.side  # Path to the Selenium test suite file

      - name: 📤 Upload Selenium Test Reports  # Save test results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: selenium-ide-reports  # Artifact name for test reports
          path: test-results  # Directory containing test results
